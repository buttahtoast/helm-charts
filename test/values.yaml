sample:
  data:
    - "list"
    - "list2"
  sample1:
    data:
      me: "here"
  common:
    data:
      should: sample1

  nested:
    - name: "test"
      base: "data"
      priority: 1
      sublist:
        - sample_1
        - test_1
      complex_list:
        - name: "sampler"
          sub_data_1: "true"
      overwriter:
        - slice
      map:
        common:
          here: 1
        sample_1:
          data: true


    - name: "sample1"
      should: "not"
    - name: "append"
      should: "me"
    - name: "fat"
      should: "fuck"
    - meow: 1
      sampler:
        1: 1
        list:
          - 1
          - 2
sample2:
  data:
    - "sample2"
    - "mega_data"
  sample2:
    data:
      me: "here"
  common:
    data:
      is: sample2
  nested:
    - name: "test"
      priority: 2
      complex: "data"
      overwriter:
        map: type
      sublist:
        - __inject__
        - sample_2
        - test_2
      complex_list:
        - name: "sampler"
          sub_data_2: "true"
      map:
        common:
          there: 2
        sample_2:
          data: true
    - name: "sample2"
      should: "be"
    - __inject__
    - (( meow ))
    - meow: 1
      sampler:
        2: 2
        list:
          - __inject__
          - 3
          - 4


test: 
  - other 
  - data
  - (( append ))
