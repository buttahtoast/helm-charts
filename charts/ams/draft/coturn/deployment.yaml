---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ant-media.fullname" . }}-coturn
  labels:
    {{- include "ant-media.labels" . | nindent 4 }}
    "app.kubernetes.io/component": "coturn"
spec:
  {{- if not .Values.coturn.autoscaling.enabled }}
  replicas: {{ .Values.coturn.replicaCount }}
  {{- end }}
  {{- with .Values.coturn.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      "app.kubernetes.io/component": "coturn"
      {{- include "ant-media.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        "app.kubernetes.io/component": "coturn"
        {{- include "ant-media.labels" $ | nindent 8 }} 
    spec:
      serviceAccountName: {{ include "ant-media.serviceAccountName" $ }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- with .Values.coturn.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.coturn.podSecurityContext.enabled }}
      securityContext:
        {{- toYaml (omit .Values.coturn.podSecurityContext "enabled") | nindent 8 }}
      {{- end }}
      {{- with .Values.coturn.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coturn.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coturn.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.coturn.dnsPolicy }}
      dnsPolicy: {{ . }}
      {{- end }}
      containers:
      - name: ant-media-server
        {{- if .Values.coturn.securityContext.enabled }}
        securityContext:
          {{- toYaml (omit .Values.coturn.securityContext "enabled") | nindent 10 }}
        {{- end }}
        image: "{{ .Values.coturn.image.repository }}:{{ .Values.coturn.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.coturn.image.pullPolicy }}
        {{- with .Values.coturn.cmd }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        args:
        {{- range $key, $value := .Values.coturn.args }}
            {{- if not (kindIs "invalid" $value) }}
        - -{{ $key | mustRegexFind "^[^_]+" }}={{ include "helm.utils.template" (dict "tpl" $value "ctx" $.ctx) }}
            {{- else }}
        - -{{ $key | mustRegexFind "^[^_]+" }}
            {{- end }}
        {{- end }}
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
          {{- with .Values.coturn.args }}
            {{- include "helm.utils.envs" (dict "envs" . "ctx" $) | nindent 8 }}
          {{- end }}
        {{- with .Values.coturn.resources }}  
        resources:
          {{ .| toYaml | nindent 10 }}
        {{- end }}
        {{- if .Values.coturn.livenessProbe.enabled }}
        livenessProbe:
          {{- toYaml (omit .Values.coturn.livenessProbe "enabled") | nindent 10 }}
        {{- end }}
        {{- if .Values.coturn.readinessProbe.enabled }}
        readinessProbe:
          {{- toYaml (omit .Values.coturn.readinessProbe "enabled") | nindent 10 }}
        {{- end }}
        ports:
          - name: turn-udp
            containerPort: 3478
            hostPort: 3478
            protocol: UDP
          - name: turn-tcp
            containerPort: 3478
            hostPort: 3478
            protocol: TCP
          - name: prometheus
            containerPort: 9641
            protocol: TCP
        volumeMounts:
          - name: tmp
            mountPath: /tmp
        {{- with .Values.coturn.volumeMounts }}
          {{- toYaml . | nindent 10 }}
        {{- end }}

