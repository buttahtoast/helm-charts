# Default values for csgo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:

  ## Global Docker Image Registry
  # global.imageRegistry -- Global Docker Image Registry declaration. Will overwrite all child .registry fields.
  imageRegistry: ""

  ## Global Default Image Tag
  # global.defaultTag -- Global Docker Image Tag declaration. Will be used as default tag, if no tag is given by child
  defaultTag: ""

  ## Global Docker Image PullPolicy
  # global.imagePullPolicy -- Global Docker Image Pull Policy declaration. Will overwrite all child .pullPolicy fields.
  imagePullPolicy: ""

  ## Global StorageClass
  # global.storageClass -- Global StorageClass declaration. Can be used to overwrite StorageClass fields.
  storageClass: ""

  ## Global Image Pull Secrets
  # global.imagePullSecrets -- Global Docker Image Pull Secrets declaration. Added to local Docker Image Pull Secrets.
  imagePullSecrets: []

## Server Configuration
config:

  ## Environment Variable: SRCDS_RCONPW="changeme" (value can be overwritten by csgo/cfg/server.cfg)
  # config.rcon_password -- `SRCDS_RCONPW` Configuration (Will be stored as secret)
  rcon_password: ""

  ## Environment Variable: SRCDS_PW="changeme" (value can be overwritten by csgo/cfg/server.cfg)
  # config.password -- `SRCDS_PW` Configuration (Will be stored as secret)
  password: ""

  ## Environment Variable: SRCDS_PORT=27015
  # config.password -- `SRCDS_PORT` Configuration - Published Server Port
  port: 27015

  ## Environment Variable: SRCDS_HOSTNAME="New CSGO Server" (first launch only)
  # config.hostname -- `SRCDS_HOSTNAME` Configuration - Server hostname
  hostname: "Custom CS GO Server"

  ## Environment Variable: SRCDS_NET_PUBLIC_ADDRESS="0" (public facing ip, useful for local network setups)
  # config.public_address -- `SRCDS_NET_PUBLIC_ADDRESS` Configuration - Published address
  public_address: "0"

  ## Environment Variable: SRCDS_IP="0" (local ip to bind)
  # config.local_address -- `SRCDS_IP` Configuration - Local address binding
  local_address: "0"

  ## Environment Variable: SRCDS_FPSMAX=300
  # config.maxfps -- `SRCDS_FPSMAX` Configuration - Maximum FPS
  maxfps: 300

  ## Environment Variable: SRCDS_TICKRATE=128
  # config.tickrate -- `SRCDS_TICKRATE` Configuration - Server Tickrate (Refresh rate)
  tickrate: 128

  ## Environment Variable: SRCDS_MAXPLAYERS=14
  # config.tickrate -- `SRCDS_MAXPLAYERS` Configuration - Maximum Players
  maxplayers: 14

  ## Environment Variable: SRCDS_REGION=3
  # config.tickrate -- `SRCDS_REGION` Configuration - [Server Region](https://github.com/GameServerManagers/Game-Server-Configs/blob/master/CounterStrikeGlobalOffensive/server.cfg#L36)
  region: 3

  map:

    ## Environment Variable: SRCDS_STARTMAP="de_dust2"
    # config.map.start -- `SRCDS_STARTMAP` Configuration - Start Map
    start: "de_dust2"

    ## Environment Variable: SRCDS_MAPGROUP="mg_active"
    # config.map.group -- `SRCDS_MAPGROUP` Configuration - Active [Mapgroup](https://wiki.nitrado.net/en/CS:GO_Server_Configuration)
    group: "mg_active"

  game:

    ## Environment Variable: SRCDS_GAMETYPE=0
    # config.game.type -- `SRCDS_GAMETYPE` Configuration - [Game Type](https://developer.valvesoftware.com/wiki/CSGO_Game_Mode_Commands)
    type: 0

    ## Environment Variable: SRCDS_GAMEMODE=1
    # config.game.mode -- `SRCDS_GAMEMODE` Configuration - [Game Mode](https://developer.valvesoftware.com/wiki/CSGO_Game_Mode_Commands)
    mode: 1

  workshop:

    ## Environment Variable: SRCDS_WORKSHOP_START_MAP=0
    # config.workshop.start_map -- `SRCDS_WORKSHOP_START_MAP` Configuration - Map loaded on server restart
    start_map: 0

    ## Environment Variable: SRCDS_HOST_WORKSHOP_COLLECTION=1
    # config.workshop.collection -- `SRCDS_HOST_WORKSHOP_COLLECTION` Configuration - Workshop map [collection](https://developer.valvesoftware.com/wiki/CSGO_Workshop_For_Server_Operators)
    collection: 1

    ## Environment Variable: SRCDS_WORKSHOP_AUTHKEY="" (required to use host_workshop_map)
    # config.workshop.auth -- `SRCDS_WORKSHOP_AUTHKEY` Configuration - Required to use host_workshop_map
    auth: ""

  ## Environment Variable: ADDITIONAL_ARGS="" (Pass additional arguments to srcds. Make sure to escape correctly!)
  # config.additional_args -- `ADDITIONAL_ARGS` Configuration - Adaitional execution arguments
  additional_args: []


## Enable Broadcasting
# https://developer.valvesoftware.com/wiki/Counter-Strike:_Global_Offensive_Broadcast
tv:

  ## Enable Broadcasting
  # tv.enabled -- Enable GO broadcasting (Enables Service and Port)
  enabled: true

  ## Environment Variable: SRCDS_TV_PORT=27020
  # tv.port -- `SRCDS_TV_PORT` Configuration - Pod port for broadcasting
  port: 27020

  #
  ## - Service
  ## Reference: https://kubernetes.io/docs/concepts/services-networking/service/
  ##
  service:

    ## Tv Service Enable
    # tv.service.enabled -- Enable Service Resource
    enabled: true

    ## Service API version
    # tv.service.apiVersion -- Configure the api version used
    # @default -- v1
    apiVersion: ""

    ## Service Labels
    # tv.service.labels -- Configure Service additional Labels
    labels: {}

    ## Service Annotations
    # tv.service.annotations -- Configure Service additional Annotations ([Monitor Labels](https://www.weave.works/docs/cloud/latest/tasks/monitor/configuration-k8s/))
    annotations: {}

    ## Service Type
    # tv.service.type -- Configure Service [Type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
    type: ClusterIP

    ## Service Port Name
    # tv.service.portName -- Configure Service Port name
    portName: "srcds_tv"

    ## Service Extra Ports
    # tv.service.extraPorts -- Add additional ports to the service
    extraPorts: []

    ## Service NodePort ([Reference](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport))
    # tv.service.nodePort -- Specify the nodePort value for the LoadBalancer and NodePort service types
    nodePort: ""

    ## Service Loadbalancer IP
    # tv.service.loadBalancerIP -- Configure Service [loadBalancerIP](https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer). Set the LoadBalancer service type to internal only.
    loadBalancerIP: ""

    ## Service Load Balancer SourceRanges
    # tv.service.loadBalancerSourceRanges -- Configure Service [loadBalancerSourceRanges](https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service)
    ## Example:
    ## loadBalancerSourceRanges:
    ## - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []

    ## Service ClusterIP
    # tv.service.clusterIP -- Configure Service [clusterIP](https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address)
    # @default -- None
    # clusterIP: None

    ## Service Selector
    # tv.service.selector -- Configure Service Selector Labels
    # @default -- `bedag-lib.selectorLabels`
    selector: {}


## Extra Resources
# extraResources -- Enter Extra Resources managed by the release
extraResources: []

## Overwrite Name Template
# nameOverride -- Overwrite "bedag-lib.name" output
nameOverride: ""

## Overwrite Fullname Template
# fullnameOverride -- Overwrite "bedag-lib.fullname" output
fullnameOverride: ""

## Common Labels
# commonLabels -- Common Labels are added to each kubernetes resource manifest. But will not be added to resources rendered by the common chart (eg. JMX Exporter)
commonLabels: {}

## Overwrite Labels
# overwriteLabels -- Overwrites default labels, but not resource specific labels and common labels
overwriteLabels: {}

## Selector Labels
# selectorLabels -- Define default [selectorLabels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
# @default -- `app.kubernetes.io/name: crowd-software<br>app.kubernetes.io/instance: test`
selectorLabels: {}

## Proxy Configuration
## By Configuring the following proxy settings, the proxy is added automaticaly as environment variables
## The Structure is compatible with other proxy related functions, like "bedag-lib.util.javaProxies"
##
proxy:

  ## HTTP Proxy Configuration
  ##
  httpProxy:

    ## HTTP Proxy Host Configuration
    # proxy.httpProxy.host -- Configure HTTP Proxy Hostname/IP (without protocol://)
    host: ""

    ## HTTP Proxy Port Configuration
    # proxy.httpProxy.port -- (int) Configure HTTP Proxy Port
    port:

    ## HTTP Proxy Protocol Configuration
    # proxy.httpProxy.protocol -- Configure HTTP Proxy Protocol (http/https)
    # @default -- http
    protocol: ""

  ## HTTPS Proxy Configuration
  ##
  httpsProxy:

    ## HTTPS Proxy Host Configuration
    # proxy.httpsProxy.host -- Configure HTTPS Proxy Hostname/IP (without protocol://)
    host: ""

    ## HTTP Proxy Port Configuration
    # proxy.httpsProxy.port -- (int) Configure HTTPS Proxy Port
    port:

    ## HTTP Proxy Protocol Configuration
    # proxy.httpsProxy.protocol -- Configure HTTPS Proxy Protocol (http/https)
    # @default -- http
    protocol: ""

  ## No Proxy Hosts Configuration
  # proxy.noProxy -- Configure No Proxy Hosts
  # @default -- `[ "localhost", "127.0.0.1" ]`
  noProxy: []

## Define Container Timezone
# timezone -- Define Container Timezone (Sets TZ Environment)
timezone: "Europe/Zurich"

#
## - Statefulset
## Reference: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
##
statefulset:

  ## Statefulset API version
  # statefulset.apiVersion -- Configure the api version used for the Statefulset resource
  apiVersion: ""

  ## Statefulset Labels
  # statefulset.labels -- Merges given labels with common labels
  # @default -- `bedag-lib.commonLabels`
  labels: {}

  ## Statefulset Service
  # statefulset.serviceName -- Define a Service for the Statefulset
  # @default -- `bedag-lib.fullname`
  serviceName: ""

  ## Statefulset Selector Labels
  # statefulset.selectorLabels -- Define SelectorLabels for the Pod Template
  # @default -- `bedag-lib.selectorLabels`
  selectorLabels: {}

  ## Amount of Replicas
  # statefulset.replicaCount -- Amount of Replicas deployed
  # @default -- 1
  replicaCount: 1

  ## Statefulset Pod Management Policy
  # statefulset.podManagementPolicy -- Statefulset [Management Policy](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies). **Statefulset only**
  podManagementPolicy: ""

  ## StrategyType, can be set to RollingUpdate or OnDelete by default.
  # statefulset.updateStrategy -- Statefulset [Update Strategy](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets). **Statefulset only**
  updateStrategy: RollingUpdate

  ## Partition update strategy
  # statefulset.rollingUpdatePartition -- Statefulset [Update Pratition](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions). **Statefulset only**
  rollingUpdatePartition: ""

  ## Persistent Volume Template Configuration
  # statefulset.volumeClaimTemplates -- Statefulset [volumeClaimTemplates](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#components). **Statefulset only**
  volumeClaimTemplates: []
  #  - metadata:
  #      name: example
  #      annotations: {}
  #    spec:
  #      accessModes: [ "ReadWriteOnce" ]
  #      resources:
  #        requests:
  #          storage: "1Gi"
  #      storageClassName: { include "lib.utils.storageClass" (dict "persistence" .Values.persistence "context" $.Values) }


  ## Pod Configuration
  ## https://github.com/oliverbaehler/helm-charts/blob/simplify/charts/manifests/templates/manifests/README.md#pod-template
  ## Full Configuration

  ## Image Pull Secrets
  # statefulset.imagePullSecrets -- Define [ImagePullSecrets](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/). Will be overwritten if set by global variable.
  imagePullSecrets: []

  ## Pod Labels
  # statefulset.podLabels -- Pod [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/) are only added for the pod
  podLabels: {}

  ## Pod Annotations
  # statefulset.podAnnotations -- Pod [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) are only added for the pod
  podAnnotations: {}

  ## Pod ForceRedeploy
  ## statefulset.forceRedeploy -- Adds timestamp annotation, causing your pods to be redeployed everytime a new release applied.
  forceRedeploy: false

  ## Extra Pod Fields
  # statefulset.podFields -- Add extra field to the [Pod Template](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#podtemplate-v1-core) if not available as value.
  podFields: {}
  #  hostNetwork: true

  ## Additional Kubernetes Volumes
  # statefulset.volumes -- Additional [Volumes](https://kubernetes.io/docs/concepts/storage/volumes/)
  volumes: []
  #  - name: cache
  #    emptyDir: {}
  #  - name: share
  #    persistentVolumeClaim:
  #      claimName: 'gen-jira-software-shared'

  ## RestartPolicy Configuration
  # statefulset.restartPolicy -- Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
  restartPolicy:

  ## Affinity Configuration
  # statefulset.affinity -- Pod [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)
  affinity: {}

  ## NodeSelector Configuration
  # statefulset.nodeSelector -- Pod [NodeSelector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
  nodeSelector: {}

  ## Tolerations Configuration
  # statefulset.tolerations -- Pod [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
  tolerations: {}

  ## Priority Configuration
  # statefulset.priorityClassName -- Pod [priorityClassName](https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass)
  priorityClassName: ""

  ## Pod SecurityContext Configuration
  # statefulset.podSecurityContext -- Pod [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  podSecurityContext: {}

  ## Pod Initcontainers
  # statefulset.initContainers -- Pod [initContainers](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/)
  initContainers: []
  #  - name: init-myservice
  #    image: busybox:1.28
  #    command: ['sh', '-c', "until nslookup myservice.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]

  ## Pod SideCar Containers
  # statefulset.sidecars -- Allows to add sidecars to your [maincar]](https://kubernetes.io/docs/concepts/workloads/pods/#using-pods)
  sidecars: []

  #
  ## - ServiceAccount
  ## Reference: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ## API Reference: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#serviceaccount-v1-core
  ##
  serviceAccount:

    ## ServiceAccount Creation
    # statefulset.serviceAccount.enabled -- Specifies whether a service account is enabled or not
    enabled: false

    ## ServiceAccount Creation
    # statefulset.serviceAccount.create -- Specifies whether a service account should be created
    create: false

    ## ServiceAccount API version
    # statefulset.serviceAccount.apiVersion -- Configure the api version used
    # @default -- v1
    apiVersion: ""

    ## ServiceAccount Labels
    # statefulset.serviceAccount.labels -- Merges given labels with common labels
    labels: {}

    ## ServiceAccount Annotations
    # statefulset.serviceAccount.annotations -- Annotations to add to the service account
    annotations: {}

    ## ServiceAccount Auto Mount Service Token
    # statefulset.serviceAccount.automountServiceAccountToken -- (bool) AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted.
    automountServiceAccountToken: true

    ## ServiceAccount Image pull secrets
    # statefulset.serviceAccount.imagePullSecrets -- ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount.
    imagePullSecrets: []

    ## ServiceAccount Global PullSecrets
    # statefulset.serviceAccount.globalPullSecrets -- Evaluate global set pullsecrets and mount, if set
    globalPullSecrets: false

    ## ServiceAccount Secrets
    # statefulset.serviceAccount.secrets -- Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount
    secrets: []

    ## ServiceAccount Name
    # statefulset.serviceAccount.name -- If not set and create is true, a name is generated using the fullname template
    # @default -- `bedag-lib.fullname`
    name: ""


  ## Container Configuration
  ## https://github.com/oliverbaehler/helm-charts/blob/simplify/charts/manifests/templates/manifests/README.md#container-template
  ## Full Configuration


  #
  ## -- Container
  ## Reference: https://kubernetes.io/de/docs/concepts/containers/
  ## Container API Object - https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#container-v1-core
  #

  ## Custom Container Name
  # statefulset.containerName -- Configure Container Name
  # @default -- `.Chart.Name`
  containerName:

  ## Docker Image definition.
  image:
    # statefulset.image.registry -- Configure Docker Registry. Will be overwritten if set by global variable.
    registry: docker.io

    # statefulset.image.repository -- Configure Docker Repository
    repository: cm2network/csgo

    # statefulset.image.pullPolicy -- Configure Docker Pull Policy. Will be overwritten if set by global variable.
    pullPolicy: ""

    # statefulset.image.tag -- Configure Docker Image tag
    tag: "sourcemod"

  ## Container Resources
  # statefulset.resources -- Configure Container [Resource](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
  resources:
    {}
  #  requests:
  #    memory: "64Mi"
  #    cpu: "250m"
  #  limits:
  #    memory: "128Mi"
  #    cpu: "500m"

  ## Container Command
  # statefulset.command -- Configure executed container command
  command:
    {}

  ## Container Command Args
  # statefulset.args -- Configure arguments for executed command
  args:
    {}

  ## Environment Variables
  # statefulset.environment -- Configure Environment Variables (Refer to values.yaml)
  environment:
    {}
  # - name: "MY_ENV"
  #   value: "someValue"
  #   secret: true
  # - name: SOME_SPEC
  #   valueFrom:
  #     fieldRef:
  #       fieldPath: spec.*
  #

  ## Container Ports
  # statefulset.ports -- Configure Container Ports
  ports:
    {}
  # - name: "health"
  #   containerPort: 9090
  #   protocol: TCP

  ## Additional Volume Mounts
  # statefulset.volumeMounts -- Configure Container [volumeMounts](https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/)
  volumeMounts:
    {}
  #  - name: "cache"
  #    mountPath: /cache
  #  - name: "share"
  #    mountPath: /var/data/share

  ## Container SecurityContext
  # statefulset.securityContext -- Container [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  securityContext:
    {}

  ## ReadinessProbe Configuration
  # statefulset.readinessProbe -- Container [ReadinessProbe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes)
  readinessProbe:
    {}
  #  httpGet:
  #    path: /health
  #    port: http
  #  initialDelaySeconds: 60

  ## LivenessProbe Configuration
  # statefulset.livenessProbe -- Container [LivenessProbe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-command)
  livenessProbe:
    tcpSocket:
      port: "srcds"
    initialDelaySeconds: 30
    periodSeconds: 10

  ## StartupProbe Configuration
  # statefulset.startupProbe -- Container [StartupProbe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes)
  startupProbe:
    {}
  #  httpGet:
  #    path: /health
  #    port: http
  #  failureThreshold: 30
  #  periodSeconds: 10

  ## Container Lifecycle Hooks
  # statefulset.lifecycle -- Container [Lifecycle](https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/)
  lifecycle:
    {}
  #  postStart:
  #    exec:
  #      command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]

  ## Container ExtraFields
  # statefulset.containerFields -- Extra fields used on the container definition
  containerFields:
    {}
  #  stdinOnce: true



#
## - Service
## Reference: https://kubernetes.io/docs/concepts/services-networking/service/
##
service:

  ## Service Enable
  # service.enabled -- Enable Service Resource
  enabled: true

  ## Service API version
  # service.apiVersion -- Configure the api version used
  # @default -- v1
  apiVersion: ""

  ## Service Labels
  # service.labels -- Configure Service additional Labels
  labels: {}

  ## Service Annotations
  # service.annotations -- Configure Service additional Annotations ([Monitor Labels](https://www.weave.works/docs/cloud/latest/tasks/monitor/configuration-k8s/))
  annotations: {}

  ## Service Type
  # service.type -- Configure Service [Type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  type: ClusterIP

  ## Service Extra Ports
  # service.extraPorts -- Add additional ports to the service
  extraPorts: []

  ## Service NodePort ([Reference](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport))
  # service.nodePort -- Specify the nodePort value for the LoadBalancer and NodePort service types
  nodePort: ""

  ## Service Loadbalancer IP
  # service.loadBalancerIP -- Configure Service [loadBalancerIP](https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer). Set the LoadBalancer service type to internal only.
  loadBalancerIP: ""

  ## Service Load Balancer SourceRanges
  # service.loadBalancerSourceRanges -- Configure Service [loadBalancerSourceRanges](https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service)
  ## Example:
  ## loadBalancerSourceRanges:
  ## - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []

  ## Service ClusterIP
  # service.clusterIP -- Configure Service [clusterIP](https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address)
  # @default -- None
  # clusterIP: None

  ## Service Selector
  # service.selector -- Configure Service Selector Labels
  # @default -- `bedag-lib.selectorLabels`
  selector: {}


#
## - Ingress
## Reference: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:

  ## Enable Ingress
  # ingress.enabled -- Enable Ingress Resource
  enabled: true

  ## Ingress API version
  # ingress.apiVersion -- Configure the api version used for the ingress resource.
  apiVersion: ""

  ## Ingress Labels
  # ingress.labels -- Configure Ingress additional Labels
  labels: {}

  ## Ingress Annotations
  # ingress.annotations -- Configure Ingress Annotations
  annotations: {}
  #  kubernetes.io/ingress.class: nginx (Deprecated)
  #  kubernetes.io/tls-acme: "true"

  ## Ingress Default Backend
  # ingress.backend -- Configure a [default backend](https://kubernetes.io/docs/concepts/services-networking/ingress/#default-backend) for this ingress resource
  backend: {}
  # service:
  #   name: backend
  #   port:
  #     number: 80

  ## Ingress Default Class
  # ingress.ingressClass -- Configure the [default ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#default-ingress-class) for this ingress.
  ingressClass: ""

  ## Ingress HTTP Rules
  # ingress.hosts -- Configure Ingress [Hosts](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules) (Required)
  hosts: []

  # ingress.hosts[0].host -- Ingress Hostname
  #  - host: chart-example.local
  #
  # ingress.hosts[0].paths -- Ingress Paths
  #    paths:
  #
  ## Path with service backend
  #
  # ingress.hosts[0].paths[0].path -- Ingress Path Context
  #      - path: "/"
  #
  # ingress.hosts[0].paths[0].serviceName -- Ingress Path service backend name
  # @default -- `bedag-lib.fullname`
  #        serviceName: ""
  #
  # ingress.hosts[0].paths[0].servicePort -- Ingress Path service backend port
  # @default -- http
  #        servicePort: ""
  #
  ## Path with resource backend
  #
  # ingress.hosts[0].paths[1].path -- Ingress Path Context
  #      - path: "/storage"
  #
  # ingress.hosts[0].paths[1].pathType -- Ingress path [pathType](https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types)
  # @default -- Prefix
  #        pathType: "ImplementationSpecific"
  #
  # ingress.hosts[0].paths[1].resource -- Ingress path resource backend
  #        resource:
  #          apiGroup: k8s.example.com
  #          kind: StorageBucket
  #          name: icon-assets
  #
  # ingress.hosts[0].paths[2].path -- Direct Ingress Path. Defaults to service backend.
  #      - "/"
  #

  ## Ingress TLS Configuration
  # ingress.tls -- Configure Ingress [TLS](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls)
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  ## Custom Ingress Rules
  # ingress.customRules -- Configure Custom Ingress [Rules](https://kubernetes.io/docs/concepts/services-networking/ingress/#resource-backend)
  customRules: []
  #  - http:
  #      paths:
  #        - path: /icons
  #          pathType: ImplementationSpecific
  #          backend:
  #            resource:
  #              apiGroup: k8s.example.com
  #              kind: StorageBucket
  #              name: icon-assets


#
## - Pod disruption budget
## Reference: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
##
pdb:

  ## Enable Pdb
  # pdb.enabled -- Enable Pdb Resource
  enabled: false

  ## Pdb API version
  # pdb.apiVersion -- Configure the api version used for the Pdb resource
  apiVersion: ""

  ## Pdb Labels
  # pdb.labels -- Merges given labels with common labels
  # @default -- `bedag-lib.commonLabels`
  labels: {}

  ## Pdb Selector Labels
  # pdb.selectorLabels -- Define SelectorLabels for the pdb
  # @default -- `bedag-lib.selectorLabels`
  selectorLabels: {}

  ## Pdb minAvailable
  # pdb.minAvailable -- Number or percentage of pods which must be available during a disruption. If neither `minAvailable` or `maxUnavailable` is set, de Policy defaults to `minAvailable: 1`
  minAvailable:

  ## Pdb maxUnavailable
  # pdb.maxUnavailable -- Number or percentage of pods which is allowed to be unavailable during a disruption
  maxUnavailable:


#
## -  Persistent Volume Claim
## Reference: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
##
persistence:

  ## Enable PVC
  # persistence.enabled -- Enable Persistence
  enabled: true

  ## PVC Mountpath
  # persistence.mountPath -- Destination for persistent volume
  mountPath: "/home/steam/csgo-dedicated/"

  ## PVC Labels
  # persistence.labels -- Merges given labels with common labels
  # @default -- `bedag-lib.commonLabels`
  labels: {}

  ##  PVC Annotations
  # persistence.annotations -- Configure PVC additional Annotations
  annotations: {}

  ##  PVC Access Modes
  # persistence.accessModes -- Configure PVC [Access Modes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)
  accessModes: [ "ReadWriteOnce" ]

  ##  PVC Storage Class
  # persistence.storageClass -- Configure PVC [Storage Class](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1)
  storageClass: ""

  ## PersistentVolumeClaim resources
  ## Reference: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#resources
  # persistence.size -- Define requested storage size
  size: 10Gi

  ##  PVC Selector
  # persistence.selector -- Configure PVC [Selector](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector)
  selector: {}

  ##  PVC Data Sources
  # persistence.dataSource -- Data Sources are currently only supported for [CSI Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#volume-snapshot-and-restore-volume-from-snapshot-support)
  dataSource:
  #  name: existing-src-pvc-name
  #  kind: PersistentVolumeClaim
